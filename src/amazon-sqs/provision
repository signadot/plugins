#!/usr/bin/env bash

set -euo pipefail

INPUT_DIR="${INPUT_DIR:-/signadot/provision/input}"
OUTPUT_DIR="${OUTPUT_DIR:-/signadot/provision/output}"

if [ $# -ne 2 ]; then
  echo "usage: provision <sandbox-id> <resource-name>"
  exit 1
fi

# Get values passed to us by Signadot Operator.
# These tell us which resource name in which Sandbox we should provision.
SANDBOX_ID=$1
RESOURCE_NAME=$2

echo "sandbox id: ${SANDBOX_ID}"
echo "resource name: ${RESOURCE_NAME}"

# Build args list for the 'create-queue' command.
EXTRA_ARGS=()

# Get values passed to us as "params" in the Sandbox's "resources" section.
REGION=$(cat "${INPUT_DIR}/region")

if [[ -e "${INPUT_DIR}/attributes" ]]; then
  ATTRIBUTES=$(cat "${INPUT_DIR}/attributes")
  echo "attributes: ${ATTRIBUTES}"
  EXTRA_ARGS+=(--attributes "${ATTRIBUTES}")
fi

if [[ -e "${INPUT_DIR}/tags" ]]; then
  TAGS=$(cat "${INPUT_DIR}/tags")
  echo "tags: ${TAGS}"
  EXTRA_ARGS+=(--tags "${TAGS}")
fi

# Choose a queue name that's unique to this resource in this sandbox.
QUEUE_NAME="signadot-${RESOURCE_NAME}-${SANDBOX_ID}"
echo "Creating queue: ${QUEUE_NAME}"

# Create the queue. Capture the JSON output.
QUEUE_INFO=$(aws --region "${REGION}" sqs create-queue --queue-name "${QUEUE_NAME}" "${EXTRA_ARGS[@]}")
echo "${QUEUE_INFO}"

# Extract the queue URL.
QUEUE_URL=$(jq -r '.QueueUrl' <<<"${QUEUE_INFO}")

# Tell the fork(s) how to use the queue.
echo -n "${QUEUE_NAME}" > "${OUTPUT_DIR}/queue-name"
echo -n "${QUEUE_URL}" > "${OUTPUT_DIR}/queue-url"
